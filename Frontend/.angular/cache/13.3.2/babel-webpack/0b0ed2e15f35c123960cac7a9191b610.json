{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ImageService = /*#__PURE__*/(() => {\n  class ImageService {\n    constructor(http) {\n      this.http = http;\n      this.hostName = window.location.hostname;\n      this.port = 3000;\n      this.host = this.hostName + ':' + this.port;\n    }\n\n    getImagesObs() {\n      return this.http.get('http://' + this.host + \"/retrieve_images\").pipe(tap(data => console.log(data)), catchError(err => {\n        console.log(\"Error while fetching images: \" + err);\n        throw err;\n      }));\n    }\n\n    getImage(input) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let images = '';\n        yield this.http.get('http://' + this.host + \"/retrieve_image?image=\" + input).toPromise().then(data => images = data.toString()).catch(err => {\n          images = err.error.text;\n        });\n        return images;\n      });\n    }\n\n    getImages() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let images = [];\n        console.log(this.host);\n        yield this.http.get('http://' + this.host + \"/retrieve_images\").toPromise().then(data => images = data);\n        return images;\n      });\n    }\n\n  }\n\n  ImageService.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ImageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n  return ImageService;\n})();","map":null,"metadata":{},"sourceType":"module"}