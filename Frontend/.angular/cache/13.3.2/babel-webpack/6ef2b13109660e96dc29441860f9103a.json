{"ast":null,"code":"import { ROUTES } from '../sidebar/sidebar.component';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { UpdateProfileComponent } from '../dialogs/update-profile/update-profile.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nexport let NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(location, matDialog, element, router) {\n      this.matDialog = matDialog;\n      this.element = element;\n      this.router = router;\n      this.mobile_menu_visible = 0;\n      this.location = location;\n      this.sidebarVisible = false;\n    }\n\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n      this.router.events.subscribe(event => {\n        this.sidebarClose();\n        var $layer = document.getElementsByClassName('close-layer')[0];\n\n        if ($layer) {\n          $layer.remove();\n          this.mobile_menu_visible = 0;\n        }\n      });\n    }\n\n    sidebarOpen() {\n      const toggleButton = this.toggleButton;\n      const body = document.getElementsByTagName('body')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    }\n\n    sidebarClose() {\n      const body = document.getElementsByTagName('body')[0];\n      this.toggleButton.classList.remove('toggled');\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n\n    sidebarToggle() {\n      // const toggleButton = this.toggleButton;\n      // const body = document.getElementsByTagName('body')[0];\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n\n      const body = document.getElementsByTagName('body')[0];\n\n      if (this.mobile_menu_visible == 1) {\n        // $('html').removeClass('nav-open');\n        body.classList.remove('nav-open');\n\n        if ($layer) {\n          $layer.remove();\n        }\n\n        setTimeout(function () {\n          $toggle.classList.remove('toggled');\n        }, 400);\n        this.mobile_menu_visible = 0;\n      } else {\n        setTimeout(function () {\n          $toggle.classList.add('toggled');\n        }, 430);\n        var $layer = document.createElement('div');\n        $layer.setAttribute('class', 'close-layer');\n\n        if (body.querySelectorAll('.main-panel')) {\n          document.getElementsByClassName('main-panel')[0].appendChild($layer);\n        } else if (body.classList.contains('off-canvas-sidebar')) {\n          document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\n        }\n\n        setTimeout(function () {\n          $layer.classList.add('visible');\n        }, 100);\n\n        $layer.onclick = function () {\n          body.classList.remove('nav-open');\n          this.mobile_menu_visible = 0;\n          $layer.classList.remove('visible');\n          setTimeout(function () {\n            $layer.remove();\n            $toggle.classList.remove('toggled');\n          }, 400);\n        }.bind(this);\n\n        body.classList.add('nav-open');\n        this.mobile_menu_visible = 1;\n      }\n    }\n\n    onLogoutBtnPressed() {\n      localStorage.setItem(\"auth\", \"\");\n      localStorage.setItem(\"userType\", \"\");\n      this.router.navigate(['login']);\n    }\n\n    getTitle() {\n      var titleeInUrl = this.location.prepareExternalUrl(this.location.path());\n      var titleExploded = titleeInUrl.split(\"/\");\n      var explicitTitle = titleExploded[titleExploded.length - 1]; // console.log(\"title : \"+explicitTitle);\n      //   if(titlee.charAt(0) === 'home'){\n      //       titlee = titlee.slice( 1 );\n      //   }\n\n      for (var item = 0; item < this.listTitles.length; item++) {\n        if (this.listTitles[item].path === explicitTitle) {\n          return this.listTitles[item].title;\n        }\n      }\n\n      return 'Dashboard';\n    }\n\n    profile_update() {\n      const dialogConfig = new MatDialogConfig(); // dialogConfig.disableClose = true;\n\n      dialogConfig.id = \"modal-component\";\n      dialogConfig.height = \"530px\";\n      dialogConfig.width = \"600px\";\n      const modalDialog = this.matDialog.open(UpdateProfileComponent, dialogConfig);\n      modalDialog.afterClosed().subscribe(result => {\n        if (result == false) {\n          console.log(`Dialog result is false`);\n        } else {\n          console.log(`Dialog result: ${result}`); // call API to update user data\n        }\n      });\n    }\n\n  }\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 25,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-transparent\", \"navbar-absolute\", \"fixed-top\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"sr-only\"], [1, \"navbar-toggler-icon\", \"icon-bar\"], [\"id\", \"navigation\", 1, \"collapse\", \"navbar-collapse\", \"justify-content-end\"], [1, \"navbar-nav\"], [1, \"nav-item\", \"dropdown\"], [\"href\", \"javascript:void(0)\", \"id\", \"navbarDropdownMenuLink\", \"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"nav-link\"], [1, \"material-icons\"], [1, \"d-lg-none\", \"d-md-block\"], [\"aria-labelledby\", \"navbarDropdownMenuLink\", 1, \"dropdown-menu\", \"dropdown-menu-right\"], [\"href\", \"javascript:void(0)\", 1, \"dropdown-item\", 3, \"click\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_5_listener() {\n          return ctx.sidebarToggle();\n        });\n        i0.ɵɵelementStart(6, \"span\", 5);\n        i0.ɵɵtext(7, \"Toggle navigation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"span\", 6)(9, \"span\", 6)(10, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"ul\", 8)(13, \"li\", 9)(14, \"a\", 10)(15, \"i\", 11);\n        i0.ɵɵtext(16, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\")(18, \"span\", 12);\n        i0.ɵɵtext(19, \"Some Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 13)(21, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_21_listener() {\n          return ctx.profile_update();\n        });\n        i0.ɵɵtext(22, \"Profile\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_23_listener() {\n          return ctx.onLogoutBtnPressed();\n        });\n        i0.ɵɵtext(24, \"Logout\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.getTitle());\n      }\n    },\n    styles: [\".container-fluid[_ngcontent-%COMP%]{background-color:#f44336}.navbar-wrapper[_ngcontent-%COMP%]{font-weight:400;color:#fff}\"]\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}